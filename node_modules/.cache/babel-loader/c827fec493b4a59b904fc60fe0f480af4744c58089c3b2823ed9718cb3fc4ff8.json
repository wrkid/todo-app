{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Desktop/KATA/todo-1-3-13/src/components/Task/task.js\";\nimport { React, Component } from \"react\";\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      done: this.props.meta.status === 'completed' ? true : false\n    };\n    this.onCheckboxClick = () => {\n      if (this.state.done === false) this.setState({\n        done: true\n      });else {\n        this.setState({\n          done: false\n        });\n      }\n    };\n    this.checkboxStatus = () => {};\n  }\n  render() {\n    let {\n      id,\n      status,\n      createdTime\n    } = this.props.meta;\n    const description = `${status} task`;\n    const {\n      done\n    } = this.state;\n    if (done) {\n      status = 'completed';\n    } else if (status === 'editing') {\n      //means no changes in status (to do)\n    } else {\n      status = 'Active';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: status,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: done ? true : false,\n          onClick: this.onCheckboxCkick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: createdTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-destroy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"edit\",\n        defaultValue: \"Editing task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Task","constructor","args","state","done","props","meta","status","onCheckboxClick","setState","checkboxStatus","render","id","createdTime","description","className","children","type","checked","onClick","onCheckboxCkick","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue"],"sources":["/Users/w.k/Desktop/KATA/todo-1-3-13/src/components/Task/task.js"],"sourcesContent":["import {React, Component} from \"react\";\n\nimport './task.css'\n\nexport default class Task extends Component {\n\n    state = {\n        done: this.props.meta.status === 'completed' ? true : false\n    }\n\n    onCheckboxClick = () => {\n        if (this.state.done === false)\n            this.setState({\n                done: true\n            });\n        else {\n            this.setState({\n                done: false\n            });\n        }\n    }\n\n    checkboxStatus = () => {}\n\n    render () {\n        let { id, status, createdTime } = this.props.meta;\n\n        const description = `${status} task`;\n\n        const { done } = this.state;\n\n        if (done) {\n            status = 'completed';\n        } else if (status === 'editing') {\n            //means no changes in status (to do)\n        }else {\n            status = 'Active';\n        }\n\n\n        return (\n            <li className={status}>\n                <div className=\"view\">\n                    <input className=\"toggle\" \n                            type=\"checkbox\"\n                            checked={done ? true : false} \n                            onClick = { this.onCheckboxCkick}/>\n                    <label>\n                        <span className=\"description\">{ description }</span>\n                        <span className=\"created\">{ createdTime }</span>\n                    </label>\n                    <button className=\"icon icon-edit\"></button>\n                    <button className=\"icon icon-destroy\"></button>\n                </div>\n                <input type=\"text\" className=\"edit\" defaultValue=\"Editing task\" />\n            </li>\n        );\n    }\n}\n"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,SAAS,QAAO,OAAO;AAEtC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,MAAMC,IAAI,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAExCC,KAAK,GAAG;MACJC,IAAI,EAAE,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,KAAK,WAAW,GAAG,IAAI,GAAG;IAC1D,CAAC;IAAA,KAEDC,eAAe,GAAG,MAAM;MACpB,IAAI,IAAI,CAACL,KAAK,CAACC,IAAI,KAAK,KAAK,EACzB,IAAI,CAACK,QAAQ,CAAC;QACVL,IAAI,EAAE;MACV,CAAC,CAAC,CAAC,KACF;QACD,IAAI,CAACK,QAAQ,CAAC;UACVL,IAAI,EAAE;QACV,CAAC,CAAC;MACN;IACJ,CAAC;IAAA,KAEDM,cAAc,GAAG,MAAM,CAAC,CAAC;EAAA;EAEzBC,MAAMA,CAAA,EAAI;IACN,IAAI;MAAEC,EAAE;MAAEL,MAAM;MAAEM;IAAY,CAAC,GAAG,IAAI,CAACR,KAAK,CAACC,IAAI;IAEjD,MAAMQ,WAAW,GAAI,GAAEP,MAAO,OAAM;IAEpC,MAAM;MAAEH;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE3B,IAAIC,IAAI,EAAE;MACNG,MAAM,GAAG,WAAW;IACxB,CAAC,MAAM,IAAIA,MAAM,KAAK,SAAS,EAAE;MAC7B;IAAA,CACH,MAAK;MACFA,MAAM,GAAG,QAAQ;IACrB;IAGA,oBACIR,OAAA;MAAIgB,SAAS,EAAER,MAAO;MAAAS,QAAA,gBAClBjB,OAAA;QAAKgB,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBjB,OAAA;UAAOgB,SAAS,EAAC,QAAQ;UACjBE,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEd,IAAI,GAAG,IAAI,GAAG,KAAM;UAC7Be,OAAO,EAAK,IAAI,CAACC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3CzB,OAAA;UAAAiB,QAAA,gBACIjB,OAAA;YAAMgB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAGF;UAAW;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpDzB,OAAA;YAAMgB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAGH;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACRzB,OAAA;UAAQgB,SAAS,EAAC;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC5CzB,OAAA;UAAQgB,SAAS,EAAC;QAAmB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACNzB,OAAA;QAAOkB,IAAI,EAAC,MAAM;QAACF,SAAS,EAAC,MAAM;QAACU,YAAY,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAEb;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}