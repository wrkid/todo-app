{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/todo-app/src/components/Task/task.jsx\";\nimport { React, Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport Timer from '../timer';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Task extends Component {\n  constructor() {\n    super();\n    this.state = {\n      editing: false\n      // pause: false\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      todo,\n      timerOnGo\n    } = this.props;\n    timerOnGo();\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      value\n    } = this.state;\n    const {\n      editTask\n    } = this.props;\n    if (value.trim()) {\n      editTask(event.target.id, value);\n    }\n    this.setState(() => ({\n      value: ''\n    }));\n    this.setState(() => ({\n      editing: false,\n      value: ''\n    }));\n  }\n  async onValueChange(event) {\n    this.setState(() => ({\n      value: event.target.value\n    }));\n  }\n  render() {\n    const {\n      todo,\n      onDeleted,\n      onToggleDone,\n      timerOnGo\n    } = this.props;\n    const {\n      id,\n      done,\n      description,\n      secondsToDo,\n      createdTime\n    } = todo;\n    const {\n      editing\n    } = this.state;\n    let status;\n    if (done) {\n      status = 'completed';\n    } else {\n      status = 'active';\n    }\n    if (editing === true) {\n      status = 'editing';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: status,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          id: id,\n          type: \"checkbox\",\n          checked: done,\n          onChange: onToggleDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: id,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: /*#__PURE__*/_jsxDEV(Timer, {\n              id: id,\n              secondsToDo: secondsToDo,\n              timerOnGo: (idT, timeLeft) => timerOnGo(idT, timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: `created ${formatDistanceToNow(createdTime, {\n              includeSeconds: true\n            })} ago`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"edit\",\n          className: \"icon icon-edit\",\n          onClick: () => this.setState(() => ({\n            editing: !editing,\n            value: description\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"delete\",\n          className: \"icon icon-destroy\",\n          onClick: () => {\n            onDeleted(id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), status === 'editing' && /*#__PURE__*/_jsxDEV(\"form\", {\n        id: id,\n        onSubmit: this.handleSubmit.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"text\",\n          className: \"edit\",\n          defaultValue: description,\n          onChange: e => this.onValueChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\nTask.defaultProps = {\n  todo: {\n    id: '0',\n    done: false,\n    description: 'empty task',\n    secondsToDo: 0,\n    createdTime: new Date()\n  }\n};\nTask.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    done: PropTypes.bool,\n    description: PropTypes.string,\n    secondsToDo: PropTypes.number,\n    createdTime: PropTypes.instanceOf(Date)\n  }),\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n  timerOnGo: PropTypes.func.isRequired\n};\nexport default Task;","map":{"version":3,"names":["React","Component","formatDistanceToNow","PropTypes","Timer","jsxDEV","_jsxDEV","Task","constructor","state","editing","componentWillUnmount","todo","timerOnGo","props","handleSubmit","event","preventDefault","value","editTask","trim","target","id","setState","onValueChange","render","onDeleted","onToggleDone","done","description","secondsToDo","createdTime","status","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","idT","timeLeft","includeSeconds","onClick","onSubmit","bind","defaultValue","e","defaultProps","Date","propTypes","shape","string","bool","number","instanceOf","func","isRequired"],"sources":["/Users/w.k/Documents/git/todo-app/src/components/Task/task.jsx"],"sourcesContent":["import { React, Component } from 'react';\nimport { formatDistanceToNow } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport Timer from '../timer';\nimport './task.css';\n\nclass Task extends Component {\n  constructor() {\n    super();\n    this.state = {\n      editing: false,\n      // pause: false\n    };\n  }\n\n  componentWillUnmount() {\n    const { todo, timerOnGo } = this.props;\n    timerOnGo()\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { value } = this.state;\n    const { editTask } = this.props;\n    if (value.trim()) {\n      editTask(event.target.id, value);\n    }\n    this.setState(() => ({\n      value: '',\n    }));\n    this.setState(() => ({ editing: false, value: '' }));\n  }\n\n  async onValueChange(event) {\n    this.setState(() => ({\n      value: event.target.value,\n    }));\n  }\n\n\n  render() {\n    const { todo, onDeleted, onToggleDone, timerOnGo } = this.props;\n    const { id, done, description, secondsToDo, createdTime } = todo;\n    const { editing } = this.state;\n    let status;\n\n    if (done) {\n      status = 'completed';\n    } else {\n      status = 'active';\n    }\n\n    if (editing === true) {\n      status = 'editing';\n    }\n\n    return (\n      <li className={status}>\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            id={id}\n            type=\"checkbox\"\n            checked={done}\n            onChange={onToggleDone}\n          />\n          <label htmlFor={id}>\n            <span className=\"title\">{description}</span>\n            <span className=\"description\">\n              {/* <Timer id = {id} secondsToDo = { secondsToDo } timerOnGo = {(idE, newSecondsToDo) => timerOnGo(idE, newSecondsToDo)}/> */}\n              <Timer id = {id} secondsToDo = {secondsToDo} timerOnGo = {(idT, timeLeft) => timerOnGo(idT, timeLeft)}/>\n            </span> \n            <span className=\"description\">{`created ${formatDistanceToNow(createdTime, {\n              includeSeconds: true,\n            })} ago`}</span>\n          </label>\n          <button\n            type=\"button\"\n            aria-label=\"edit\"\n            className=\"icon icon-edit\"\n            onClick={() =>\n              this.setState(() => ({\n                editing: !editing,\n                value: description,\n              }))\n            }\n          />\n          <button\n            type=\"button\"\n            aria-label=\"delete\"\n            className=\"icon icon-destroy\"\n            onClick={() => {\n              onDeleted(id)\n            }}\n          />\n        </div>\n        {status === 'editing' && (\n          <form id={id} onSubmit={this.handleSubmit.bind(this)}>\n            <input\n              id={id}\n              type=\"text\"\n              className=\"edit\"\n              defaultValue={description}\n              onChange={(e) => this.onValueChange(e)}\n            />\n          </form>\n        )}\n      </li>\n    );\n  }\n}\n\nTask.defaultProps = {\n  todo: {\n    id: '0',\n    done: false,\n    description: 'empty task',\n    secondsToDo: 0, \n    createdTime: new Date(),\n  },\n};\n\nTask.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    done: PropTypes.bool,\n    description: PropTypes.string,\n    secondsToDo: PropTypes.number, \n    createdTime: PropTypes.instanceOf(Date),\n  }),\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n  timerOnGo: PropTypes.func.isRequired\n};\n\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}