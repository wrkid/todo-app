{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Desktop/KATA/todo-app/src/components/Task/task.jsx\";\nimport { React, Component } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport PropTypes from 'prop-types';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Task extends Component {\n  constructor() {\n    super();\n    this.state = {\n      editing: false,\n      // eslint-disable-next-line react/no-unused-state\n      value: ''\n    };\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      value\n    } = this.state;\n    //const { addTask } = this.props;\n    if (value.trim()) addTask(value);\n    this.setState(() => ({\n      value: ''\n    }));\n  }\n  render() {\n    const {\n      todo,\n      onDeleted,\n      onToggleDone\n    } = this.props;\n    const {\n      id,\n      done,\n      description,\n      createdTime\n    } = todo;\n    const {\n      editing\n    } = this.state;\n    let status;\n    if (done) {\n      status = 'completed';\n    } else {\n      status = 'active';\n    }\n    if (editing === true) {\n      status = 'editing';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: status,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          id: id,\n          type: \"checkbox\",\n          checked: done,\n          onChange: onToggleDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: id,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: `created ${formatDistanceToNow(createdTime, {\n              includeSeconds: true\n            })} ago`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"edit\",\n          className: \"icon icon-edit\"\n          // eslint-disable-next-line react/no-unused-state\n          ,\n          onClick: () => this.setState(() => ({\n            editing: !editing,\n            // eslint-disable-next-line react/no-unused-state\n            value: description\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"delete\",\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), status === 'editing' && /*#__PURE__*/_jsxDEV(\"form\", {\n        id: id,\n        onSubmit: this.handleSubmit.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"text\",\n          className: \"edit\",\n          defaultValue: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}\nTask.defaultProps = {\n  todo: {\n    id: 0,\n    done: false,\n    description: 'empty task',\n    createdTime: new Date()\n  }\n};\nTask.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    done: PropTypes.bool,\n    description: PropTypes.string,\n    createdTime: PropTypes.instanceOf(Date)\n  }),\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired\n};\nexport default Task;","map":{"version":3,"names":["React","Component","formatDistanceToNow","PropTypes","jsxDEV","_jsxDEV","Task","constructor","state","editing","value","handleSubmit","event","preventDefault","trim","addTask","setState","render","todo","onDeleted","onToggleDone","props","id","done","description","createdTime","status","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","includeSeconds","onClick","onSubmit","bind","defaultValue","defaultProps","Date","propTypes","shape","number","bool","string","instanceOf","func","isRequired"],"sources":["/Users/w.k/Desktop/KATA/todo-app/src/components/Task/task.jsx"],"sourcesContent":["import {React, Component} from \"react\";\n\nimport { formatDistanceToNow } from \"date-fns\";\n\nimport PropTypes from 'prop-types'\n\nimport './task.css'\n\nclass Task extends Component {\n    constructor() {\n      super();\n      this.state = {\n        editing: false,\n        // eslint-disable-next-line react/no-unused-state\n        value: '',\n      };\n    }\n\n    async handleSubmit(event) {\n      event.preventDefault();\n      const { value } = this.state;\n      //const { addTask } = this.props;\n      if (value.trim())\n          addTask(value);\n      this.setState(() => ({\n              value : ''\n          })\n      );\n    }\n\n    render () {\n        const { todo, onDeleted, onToggleDone} = this.props;\n        const { id, done, description, createdTime } = todo;\n        const { editing } = this.state;\n        let status;\n\n        if (done) {\n            status = 'completed';\n        } else {\n            status = 'active';\n        }\n\n        if (editing === true) {\n          status = 'editing';\n        }\n\n        return (\n            <li className={status}>\n                <div className=\"view\">\n                    <input className=\"toggle\" \n                            id = {id}\n                            type=\"checkbox\"\n                            checked={done} \n                            onChange={onToggleDone}/>\n                    <label htmlFor={id}>\n                        <span className=\"description\">{ description }</span>\n                        <span className=\"created\">{ `created ${formatDistanceToNow(createdTime, {includeSeconds: true})} ago` }</span>\n                    </label>\n                    <button type=\"button\"\n                            aria-label=\"edit\"\n                            className=\"icon icon-edit\"\n                            // eslint-disable-next-line react/no-unused-state\n                            onClick={() => this.setState(() => ({\n                              editing: !editing,\n                              // eslint-disable-next-line react/no-unused-state\n                              value: description,\n                            }))} />\n                    <button type=\"button\"\n                            aria-label= \"delete\"\n                            className=\"icon icon-destroy\"\n                            onClick={onDeleted} />\n                </div>\n                {status === 'editing' && (\n                  <form id = {id} \n                        onSubmit={this.handleSubmit.bind(this)}>\n                    <input id = {id} \n                            type=\"text\" \n                            className=\"edit\" \n                            defaultValue={description}/>\n                  </form>\n                )}\n            </li>\n        );\n    }\n}\n\nTask.defaultProps = {\n  todo : {\n    id: 0,\n    done: false,\n    description: 'empty task',\n    createdTime: new Date()\n  }\n}\n\nTask.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    done: PropTypes.bool,\n    description: PropTypes.string,\n    createdTime: PropTypes.instanceOf(Date),\n  }),\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired\n}\n\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}