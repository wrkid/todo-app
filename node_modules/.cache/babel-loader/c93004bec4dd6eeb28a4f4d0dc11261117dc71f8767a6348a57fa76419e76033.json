{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/todo-app/src/components/timer/timer.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Timer extends React.Component {\n  constructor() {\n    super();\n    this.updateTimer = () => {\n      const {\n        secondsToDo\n      } = this.state;\n      const newTime = secondsToDo - 1;\n      if (newTime === 0) {\n        clearInterval(this.interval);\n      }\n      this.setState(() => ({\n        secondsToDo: newTime\n      }));\n    };\n    this.timerOnPause = () => {\n      const {\n        id,\n        timerOnGo\n      } = this.props;\n      const {\n        secondsToDo\n      } = this.state;\n      timerOnGo(id, secondsToDo);\n      clearInterval(this.interval);\n    };\n    this.timerOnPlay = () => {\n      const {\n        id,\n        secondsToDo\n      } = this.props;\n      if (secondsToDo) {\n        if (lastTime) {\n          const last = new Date(lastTime);\n          const now = new Date();\n          const toGo = secondsToDo - Math.floor((now.getTime() - last.getTime()) / 1000);\n          localStorage.removeItem(id.toString());\n          if (toGo > 0) {\n            this.setState({\n              secondsToDo: toGo\n            });\n          } else {\n            this.setState({\n              secondsToDo\n            });\n          }\n        } else {\n          this.setState({\n            secondsToDo\n          });\n        }\n        this.interval = setInterval(this.updateTimer, 1000);\n      }\n    };\n    this.getTimeStr = () => {\n      const {\n        secondsToDo\n      } = this.state;\n      const newMin = Math.floor(secondsToDo / 60);\n      const newSec = secondsToDo - newMin * 60;\n      return `${newMin}:${newSec}`;\n    };\n    this.state = {\n      secondsToDo: null\n    };\n  }\n  componentDidMount() {\n    const {\n      id,\n      secondsToDo\n    } = this.props;\n    if (secondsToDo) {\n      const lastTime = localStorage.getItem(id.toString());\n      if (lastTime) {\n        const last = new Date(lastTime);\n        const now = new Date();\n        const toGo = secondsToDo - Math.floor((now.getTime() - last.getTime()) / 1000);\n        localStorage.removeItem(id.toString());\n        if (toGo > 0) {\n          this.setState({\n            secondsToDo: toGo\n          });\n        } else {\n          this.setState({\n            secondsToDo\n          });\n        }\n      } else {\n        this.setState({\n          secondsToDo\n        });\n      }\n      this.interval = setInterval(this.updateTimer, 1000);\n    }\n  }\n  componentWillUnmount() {\n    const {\n      id,\n      timerOnGo\n    } = this.props;\n    const {\n      secondsToDo\n    } = this.state;\n    if (secondsToDo > 0) {\n      localStorage.setItem(id, new Date());\n    }\n    timerOnGo(id, secondsToDo);\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      secondsToDo\n    } = this.props;\n    if (!secondsToDo) {\n      return null;\n    }\n    const time = this.getTimeStr();\n    // const { timerOnGo } = this.props;\n    // if (!timerOnGo)\n    //   return null;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"icon-play\",\n        type: \"button\",\n        className: \"icon icon-play\",\n        onClick: this.timerOnPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"icon stop\",\n        type: \"button\",\n        className: \"icon icon-pause\",\n        onClick: this.timerOnPause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n}\nTimer.defaultProps = {\n  secondsToDo: 0\n};\nTimer.propTypes = {\n  id: PropTypes.string.isRequired,\n  secondsToDo: PropTypes.number,\n  timerOnGo: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Timer","Component","constructor","updateTimer","secondsToDo","state","newTime","clearInterval","interval","setState","timerOnPause","id","timerOnGo","props","timerOnPlay","lastTime","last","Date","now","toGo","Math","floor","getTime","localStorage","removeItem","toString","setInterval","getTimeStr","newMin","newSec","componentDidMount","getItem","componentWillUnmount","setItem","render","time","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","propTypes","string","isRequired","number","func"],"sources":["/Users/w.k/Documents/git/todo-app/src/components/timer/timer.jsx"],"sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      secondsToDo: null,\n    };\n  }\n\n  componentDidMount() {\n    const { id, secondsToDo } = this.props;\n    if (secondsToDo) {\n      const lastTime = localStorage.getItem(id.toString());\n      if (lastTime) {\n        const last = new Date(lastTime);\n        const now = new Date();\n        const toGo = secondsToDo - Math.floor((now.getTime() - last.getTime()) / 1000);\n        localStorage.removeItem(id.toString());\n        if (toGo > 0) {\n          this.setState({\n            secondsToDo: toGo,\n          });\n        } else {\n          this.setState({\n            secondsToDo,\n          });\n        }\n      } else {\n        this.setState({\n          secondsToDo,\n        });\n      }\n      this.interval = setInterval(this.updateTimer, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    const { id, timerOnGo } = this.props;\n    const { secondsToDo } = this.state;\n    if (secondsToDo > 0) {\n      localStorage.setItem(id, new Date());\n    }\n    timerOnGo(id, secondsToDo);\n    clearInterval(this.interval);\n  }\n\n  updateTimer = () => {\n    const { secondsToDo } = this.state;\n    const newTime = secondsToDo - 1;\n    if (newTime === 0) {\n      clearInterval(this.interval);\n    }\n    this.setState(() => ({\n      secondsToDo: newTime,\n    }));\n  };\n\n  timerOnPause = () => {\n    const { id, timerOnGo } = this.props;\n    const { secondsToDo } = this.state;\n    timerOnGo(id, secondsToDo);\n    clearInterval(this.interval);\n  }\n\n  timerOnPlay = () => {\n    const { id, secondsToDo } = this.props;\n    if (secondsToDo) {\n      \n      if (lastTime) {\n        const last = new Date(lastTime);\n        const now = new Date();\n        const toGo = secondsToDo - Math.floor((now.getTime() - last.getTime()) / 1000);\n        localStorage.removeItem(id.toString());\n        if (toGo > 0) {\n          this.setState({\n            secondsToDo: toGo,\n          });\n        } else {\n          this.setState({\n            secondsToDo,\n          });\n        }\n      } else {\n        this.setState({\n          secondsToDo,\n        });\n      }\n      this.interval = setInterval(this.updateTimer, 1000);\n    }\n  }\n\n  getTimeStr = () => {\n    const { secondsToDo } = this.state;\n    const newMin = Math.floor(secondsToDo / 60);\n    const newSec = secondsToDo - newMin * 60;\n    return `${newMin}:${newSec}`;\n  };\n\n  render() {\n    const { secondsToDo } = this.props;\n    if (!secondsToDo) {\n      return null;\n    }\n    const time = this.getTimeStr();\n    // const { timerOnGo } = this.props;\n    // if (!timerOnGo)\n    //   return null;\n    return (\n      <span className=\"description\">\n        <button \n          aria-label=\"icon-play\" \n          type=\"button\" \n          className=\"icon icon-play\"\n          onClick={this.timerOnPlay} />\n        <button \n          aria-label=\"icon stop\" \n          type=\"button\" \n          className=\"icon icon-pause\"\n          onClick={this.timerOnPause} />\n        {time}\n      </span>\n    );\n  }\n}\n\nTimer.defaultProps = {\n  secondsToDo: 0,\n};\nTimer.propTypes = {\n  id: PropTypes.string.isRequired,\n  secondsToDo: PropTypes.number,\n  timerOnGo: PropTypes.func.isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}