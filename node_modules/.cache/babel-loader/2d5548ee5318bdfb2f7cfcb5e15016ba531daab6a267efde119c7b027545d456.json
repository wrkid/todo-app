{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Documents/git/todo-app/src/components/app/app.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewTaskForm from '../NewTaskForm';\nimport AppMain from '../app-main';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [todosData, setTodosData] = useState([]);\n  const [filter, setFilter] = useState('All');\n  const [maxId, setMaxId] = useState('1');\n  useEffect(() => {}, [todosData, filter]);\n  const deleteTask = id => {\n    const idx = todosData.findIndex(el => el.id === id);\n    const newData = [...todosData.slice(0, idx), ...todosData.slice(idx + 1)];\n    setTodosData(newData);\n  };\n  const handleSetTodos = data => {\n    setTodosData(data);\n  };\n  const timerOnGo = idT => {\n    const idx = todosData.findIndex(el => el.id === idT);\n    if (idx >= 0) {\n      const oldTask = todosData[idx];\n      const {\n        secondsLeft\n      } = todosData[idx];\n      const newTask = {\n        ...oldTask,\n        secondsLeft: secondsLeft - 1\n      };\n      setTodosData(prev => prev.with(idx, newTask));\n      // const newArray = todosData.with(idx, newTask);\n      console.log(to);\n      if (todosData[idx].secondsLeft === 1) {\n        clearInterval(todosData[idx].intervalId);\n      }\n    }\n  };\n  const timer = id => setInterval(() => timerOnGo(id), 1000);\n  const createNewTask = (task, secondsLeft) => {\n    const newId = maxId.toString();\n    setMaxId(prev => prev + 1);\n    return {\n      id: newId,\n      done: false,\n      description: task,\n      secondsLeft,\n      createdTime: new Date()\n    };\n  };\n  const addTask = (task, secondsLeft) => {\n    let isPlayed = false;\n    if (secondsLeft > 0) {\n      isPlayed = true;\n    } else {\n      isPlayed = false;\n    }\n    const newTask = createNewTask(task, secondsLeft, isPlayed);\n    if (secondsLeft > 0) {\n      const interval = timer(newTask.id);\n      newTask.intervalId = interval;\n    }\n    const newData = [...todosData, newTask];\n    handleSetTodos(newData);\n  };\n  const onToggleDone = id => {\n    const idx = todosData.findIndex(el => el.id === id);\n    const oldTask = todosData[idx];\n    const newTask = {\n      ...oldTask,\n      done: !oldTask.done\n    };\n    const newArray = todosData.with(idx, newTask);\n    handleSetTodos(newArray);\n  };\n  const deleteCompleted = () => {\n    const newData = todosData.filter(todo => !todo.done);\n    setTodosData(newData);\n  };\n  const changeFilter = v => {\n    setFilter(v);\n  };\n  const filteredTasks = () => {\n    let filteredData;\n    if (filter === 'All') {\n      filteredData = todosData.filter(todo => todo.description);\n    } else {\n      filteredData = todosData.filter(todo => {\n        if (filter === 'Active') {\n          return !todo.done;\n        }\n        return todo.done;\n      });\n    }\n    return filteredData;\n  };\n  const editTask = (idE, newDescription) => {\n    const idx = todosData.findIndex(el => el.id === idE);\n    const oldTask = todosData[idx];\n    const newTask = {\n      ...oldTask,\n      description: newDescription\n    };\n    const newArray = todosData.with(idx, newTask);\n    setTodosData(newArray);\n  };\n  const timerStop = id => {\n    const idx = todosData.findIndex(el => el.id === id);\n    clearInterval(todosData[idx].intervalId);\n  };\n  const timerPlay = id => {\n    const idx = todosData.findIndex(el => el.id === id);\n    if (idx >= 0 && todosData[idx].secondsLeft > 0) {\n      clearInterval(todosData[idx].intervalId);\n      const interval = setInterval(() => timerOnGo(id), 1000);\n      const oldTask = todosData[idx];\n      const newTask = {\n        ...oldTask,\n        intervalId: interval\n      };\n      const newArray = todosData.with(idx, newTask);\n      handleSetTodos(newArray);\n    }\n  };\n  const todoCounter = todosData.filter(todo => !todo.done).length;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppMain, {\n      todos: filteredTasks(),\n      onDeleted: deleteTask,\n      onToggleDone: onToggleDone,\n      counter: todoCounter,\n      filter: filter,\n      changeFilter: changeFilter,\n      deleteCompleted: deleteCompleted,\n      editTask: editTask,\n      timerStop: timerStop,\n      timerPlay: timerPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c2ZhwSpe8Q57UpMyMDp3JtMpPuU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NewTaskForm","AppMain","jsxDEV","_jsxDEV","App","_s","todosData","setTodosData","filter","setFilter","maxId","setMaxId","deleteTask","id","idx","findIndex","el","newData","slice","handleSetTodos","data","timerOnGo","idT","oldTask","secondsLeft","newTask","prev","with","console","log","to","clearInterval","intervalId","timer","setInterval","createNewTask","task","newId","toString","done","description","createdTime","Date","addTask","isPlayed","interval","onToggleDone","newArray","deleteCompleted","todo","changeFilter","v","filteredTasks","filteredData","editTask","idE","newDescription","timerStop","timerPlay","todoCounter","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","todos","onDeleted","counter","_c","$RefreshReg$"],"sources":["/Users/w.k/Documents/git/todo-app/src/components/app/app.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NewTaskForm from '../NewTaskForm';\nimport AppMain from '../app-main';\nimport './app.css';\n\nexport default function App() {\n  const [todosData, setTodosData] = useState([]);\n  const [filter, setFilter] = useState('All');\n  const [ maxId, setMaxId ] = useState('1');\n\n  useEffect(() => {\n\n  }, [todosData, filter])\n\n  const deleteTask = (id) => {\n    const idx = todosData.findIndex((el) => el.id === id);\n    const newData = [...todosData.slice(0, idx), ...todosData.slice(idx + 1)];\n    setTodosData(newData);\n  };\n\n  const handleSetTodos = (data) => {\n    setTodosData(data)\n  }\n\n  const timerOnGo = (idT) => {\n    const idx = todosData.findIndex((el) => el.id === idT);\n    if (idx >= 0) {\n      const oldTask = todosData[idx];\n      const { secondsLeft } = todosData[idx];\n      const newTask = { ...oldTask, secondsLeft: secondsLeft - 1 };\n      setTodosData((prev) => prev.with(idx, newTask))\n      // const newArray = todosData.with(idx, newTask);\n      console.log(to)\n      if (todosData[idx].secondsLeft === 1) {\n        clearInterval(todosData[idx].intervalId);\n      }\n    }\n  };\n\n  const timer = (id) => setInterval(() => timerOnGo(id), 1000);\n\n  const createNewTask = (task, secondsLeft) => {\n    const newId = maxId.toString();\n    setMaxId((prev) => prev+1);\n    return {\n      id: newId,\n      done: false,\n      description: task,\n      secondsLeft,\n      createdTime: new Date(),\n    };\n  };\n\n  const addTask = (task, secondsLeft) => {\n    let isPlayed = false;\n    if (secondsLeft > 0) {\n      isPlayed = true;\n    } else {\n      isPlayed = false;\n    }\n    const newTask = createNewTask(task, secondsLeft, isPlayed);\n    if (secondsLeft > 0) {\n      const interval = timer(newTask.id);\n      newTask.intervalId = interval;\n    }\n    const newData = [...todosData, newTask];\n    handleSetTodos(newData);\n  };\n\n  const onToggleDone = (id) => {\n    const idx = todosData.findIndex((el) => el.id === id);\n    const oldTask = todosData[idx];\n    const newTask = { ...oldTask, done: !oldTask.done };\n    const newArray = todosData.with(idx, newTask);\n    handleSetTodos(newArray);\n  };\n\n  const deleteCompleted = () => {\n    const newData = todosData.filter((todo) => !todo.done);\n    setTodosData(newData);\n  };\n\n  const changeFilter = (v) => {\n    setFilter(v);\n  };\n\n  const filteredTasks = () => {\n    let filteredData;\n    if (filter === 'All') {\n      filteredData = todosData.filter((todo) => todo.description);\n    } else {\n      filteredData = todosData.filter((todo) => {\n        if (filter === 'Active') {\n          return !todo.done;\n        }\n        return todo.done;\n      });\n    }\n    return filteredData;\n  };\n\n  const editTask = (idE, newDescription) => {\n    const idx = todosData.findIndex((el) => el.id === idE);\n    const oldTask = todosData[idx];\n    const newTask = { ...oldTask, description: newDescription };\n    const newArray = todosData.with(idx, newTask);\n    setTodosData(newArray);\n  };\n\n  const timerStop = (id) => {\n    const idx = todosData.findIndex((el) => el.id === id);\n    clearInterval(todosData[idx].intervalId);\n  };\n\n  const timerPlay = (id) => {\n    const idx = todosData.findIndex((el) => el.id === id);\n    if (idx >= 0 && todosData[idx].secondsLeft > 0) {\n      clearInterval(todosData[idx].intervalId);\n      const interval = setInterval(() => timerOnGo(id), 1000);\n      const oldTask = todosData[idx];\n      const newTask = { ...oldTask, intervalId: interval };\n      const newArray = todosData.with(idx, newTask);\n      handleSetTodos(newArray);\n    }\n  };\n\n  const todoCounter = todosData.filter((todo) => !todo.done).length;\n  return (\n    <section className=\"todoapp\">\n      <NewTaskForm addTask={addTask} />\n      <AppMain\n        todos={filteredTasks()}\n        onDeleted={deleteTask}\n        onToggleDone={onToggleDone}\n        counter={todoCounter}\n        filter={filter}\n        changeFilter={changeFilter}\n        deleteCompleted={deleteCompleted}\n        editTask={editTask}\n        timerStop={timerStop}\n        timerPlay={timerPlay}\n      />\n    </section>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}