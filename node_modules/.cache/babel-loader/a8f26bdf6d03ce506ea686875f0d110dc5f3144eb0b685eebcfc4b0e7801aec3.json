{"ast":null,"code":"var _jsxFileName = \"/Users/w.k/Desktop/KATA/todo-app/src/components/Task/task.jsx\";\nimport { React, Component } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport PropTypes from 'prop-types';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Task extends Component {\n  render() {\n    const {\n      done,\n      description,\n      createdTime,\n      onDeleted,\n      onToggleDone\n    } = this.props;\n    console.log(this.props);\n    let status;\n    if (done) {\n      status = 'completed';\n    } else {\n      status = 'active';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: status,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: done,\n          onChange: onToggleDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: id,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: `created ${formatDistanceToNow(createdTime, {\n              includeSeconds: true\n            })} ago`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"edit\",\n          className: \"icon icon-edit\",\n          onClick: this.editingHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"delete\",\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"edit\",\n        defaultValue: \"Editing task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n}\nTask.defaultProps = {\n  id: 0,\n  done: false,\n  description: 'empty task',\n  createdTime: new Date()\n};\nTask.propTypes = {\n  id: PropTypes.number,\n  done: PropTypes.bool,\n  description: PropTypes.string,\n  createdTime: PropTypes.instanceOf(Date),\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired\n};\nexport default Task;","map":{"version":3,"names":["React","Component","formatDistanceToNow","PropTypes","jsxDEV","_jsxDEV","Task","render","done","description","createdTime","onDeleted","onToggleDone","props","console","log","status","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","includeSeconds","onClick","editingHandler","defaultValue","defaultProps","Date","propTypes","number","bool","string","instanceOf","func","isRequired"],"sources":["/Users/w.k/Desktop/KATA/todo-app/src/components/Task/task.jsx"],"sourcesContent":["import {React, Component} from \"react\";\n\nimport { formatDistanceToNow } from \"date-fns\";\n\nimport PropTypes from 'prop-types'\n\nimport './task.css'\n\nclass Task extends Component {\n    render () {\n        const { done, description, createdTime, onDeleted, onToggleDone } = this.props;\n        console.log(this.props);\n        let status;\n\n        if (done) {\n            status = 'completed';\n        } else {\n            status = 'active';\n        }\n\n        return (\n            <li className={status}>\n                <div className=\"view\">\n                    <input className=\"toggle\" \n                            type=\"checkbox\"\n                            checked={done} \n                            onChange={onToggleDone}/>\n                    <label htmlFor={id}>\n                        <span className=\"description\">{ description }</span>\n                        <span className=\"created\">{ `created ${formatDistanceToNow(createdTime, {includeSeconds: true})} ago` }</span>\n                    </label>\n                    <button type=\"button\"\n                            aria-label=\"edit\"\n                            className=\"icon icon-edit\"\n                            onClick={this.editingHandler} />\n                    <button type=\"button\"\n                            aria-label= \"delete\"\n                            className=\"icon icon-destroy\"\n                            onClick={onDeleted} />\n                </div>\n                <input type=\"text\" className=\"edit\" defaultValue=\"Editing task\" />\n            </li>\n        );\n    }\n}\n\nTask.defaultProps = {\n  id: 0,\n  done: false,\n  description: 'empty task',\n  createdTime: new Date()\n}\n\nTask.propTypes = {\n  id: PropTypes.number,\n  done: PropTypes.bool,\n  description: PropTypes.string,\n  createdTime: PropTypes.instanceOf(Date),\n  onDeleted: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired\n}\n\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}